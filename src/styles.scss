// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();
@import url("https://fonts.googleapis.com/css?family=Poppins");
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$UI-primary: mat.define-palette(mat.$pink-palette);

$UI-accent: mat.define-palette(mat.$grey-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$UI-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$UI-theme: mat.define-light-theme(
  (
    color: (
      primary: $UI-primary,
      accent: $UI-accent,
      warn: $UI-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-legacy-component-themes($UI-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}
body {
  margin: 0;
}

$adjust-gap: 1.5rem;

.mat-card > .mat-card-actions:last-child {
  margin-bottom: unset !important;
}

::-webkit-scrollbar {
  width: 7px;
  height: 7px;
}

/* Track */
::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px transparent;
  border-radius: 10px;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background-color: rgba(192, 192, 192, 0.2);
  border-radius: 10px;
  cursor: pointer;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background-color: rgba(192, 192, 192, 0.479);
  cursor: pointer;
}

.checkbox-container {
  line-height: 4em;
}
.checkbox-label {
  font-weight: 600;
  line-height: 2em;
  font-size: 0.9em;
}

.row-center {
  align-self: center;
  justify-content: center;
}

*,
::after,
::before {
  box-sizing: border-box;
}

@for $i from 1 to 25 {
  .col-#{$i} {
    width: #{($i * 4.166666666666667) + "%"};
    padding-left: calc($adjust-gap * 0.5);
    padding-right: calc($adjust-gap * 0.5);
  }
}

[class*="col-"] {
  max-width: 100%;
  flex-shrink: 0;
  flex: 0 0 auto;
  margin-top: 0.375rem;
  margin-bottom: 0.375rem;
}

@media (max-width: 768px) {
  @for $i from 1 to 25 {
    .col-#{$i} {
      width: 100%;
    }
  }
}

// .row {
//   display: flex;
//   flex-wrap: wrap;
//   margin-left: calc($adjust-gap * -0.5);
//   margin-right: calc($adjust-gap * -0.5);
// }

.row.no-wrap {
  flex-wrap: unset;
  @for $i from 1 to 25 {
    .col-#{$i} {
      width: #{($i * 4.166666666666667) + "%"};
    }
  }
}

.col {
  padding-left: calc($adjust-gap * 0.5);
  padding-right: calc($adjust-gap * 0.5);
  margin-top: 0.375rem;
  margin-bottom: 0.375rem;
  flex: 1;
}

.mat-form-field-wrapper {
  padding-bottom: unset;
}

.status-box {
  min-width: 70px;
  border: 2px solid;
  padding: 3px 10px;
  border-radius: 10px;
  font-weight: 600;
}

.shadow-box {
  box-shadow: -1px 1px 4px grey;
  border-radius: 10px;
}

@for $i from -25 to 25 {
  .pdt#{$i} {
    padding-top: #{$i}px !important;
  }
  .pdb#{$i} {
    padding-bottom: #{$i}px !important;
  }
  .pdl#{$i} {
    padding-left: #{$i}px !important;
  }
  .pdr#{$i} {
    padding-right: #{$i}px !important;
  }
  .mt#{$i} {
    margin-top: #{$i}px !important;
  }
  .mb#{$i} {
    margin-bottom: #{$i}px !important;
  }
  .ml#{$i} {
    margin-left: #{$i}px !important;
  }
  .mr#{$i} {
    margin-right: #{$i}px !important;
  }
}

@for $i from -25 to 25 {
  .pdt-em#{$i} {
    padding-top: #{$i}em !important;
  }
  .pdb-em#{$i} {
    padding-bottom: #{$i}em !important;
  }
  .pdl-em#{$i} {
    padding-left: #{$i}em !important;
  }
  .pdr-em#{$i} {
    padding-right: #{$i}em !important;
  }
  .mt-em#{$i} {
    margin-top: #{$i}em !important;
  }
  .mb-em#{$i} {
    margin-bottom: #{$i}em !important;
  }
  .ml-em#{$i} {
    margin-left: #{$i}em !important;
  }
  .mr-em#{$i} {
    margin-right: #{$i}em !important;
  }
}

@for $i from 1 to 200 {
  $height: $i * 5;
  .height-#{$height} {
    height: #{$height}px;
    overflow: auto;
  }
}

@for $i from 1 to 20 {
  $height: $i * 5;
  .p-height-#{$height} {
    height: #{$height + "%"};
    overflow: auto;
  }
}

.mba {
  margin-bottom: auto !important;
}

* {
  font-family: "Poppins";
}

/* Default state: shows "+" sign */
.mat-expansion-panel-header .mat-expansion-indicator::after {
  content: "+";
  border: 0;
  transform: none;
  font-size: 1.25em;
}

/* Expanded state: shows "-" sign */
.mat-expansion-panel-header.mat-expanded .mat-expansion-indicator::after {
  content: "-";
}

$primary-color: black;
// $bg-primary-color: #6c59f5;
// $bg-primary-color: #e61e43; //red
$bg-primary-color:#bb0572;//peach
// $bg-primary-color:#a6cd45; //green

.middle {
  align-items: center;
  vertical-align: middle;
}

.error {
  position: absolute;
  bottom: -13px;
  left: -8px;
  font-size: 0.7em;
  font-weight: 600;
  color: #f44336c7;
}

.hint {
  position: absolute;
  bottom: -50px;
  left: -8px;
  font-size: 0.7em;
  font-weight: 600;
  color: #6936f4c7;
}

.row-gap {
  padding-bottom: 10px;
}

.pointer {
  cursor: pointer;
}

table {
  width: 100%;
}

$adjust-gap: 1.5rem;

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: calc($adjust-gap * -0.5);
  margin-right: calc($adjust-gap * -0.5);
  margin-bottom: 10px;
}

.no-text-wrap {
  text-overflow: ellipsis;
  text-wrap: nowrap;
  overflow: hidden;
}

.lower-case {
  text-transform: lowercase;
}

.text-color {
  color: $primary-color;
  font-weight: 600;
}
.full-size-button {
  margin: 0.25em 0;
  padding: 7px 0;
  width: 100%;
}

.end {
  text-align: end;
  justify-content: end;
}

.mat-form-field-appearance-outline
  .mat-form-field-outline-thick
  .mat-form-field-outline-start,
.mat-form-field-appearance-outline
  .mat-form-field-outline-thick
  .mat-form-field-outline-end,
.mat-form-field-appearance-outline
  .mat-form-field-outline-thick
  .mat-form-field-outline-gap
   {
  // border-width: 1px !important;
  color: $bg-primary-color;
}

 
